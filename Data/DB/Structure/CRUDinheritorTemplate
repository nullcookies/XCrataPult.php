<?php

namespace {%NAMESPACE%};

/**
 * Class {%CLASSNAME%} represents table {%DATABASE_ALIAS%}/{%TABLENAME%}.
 *
 * @author automatically generated by XCratapult \X\Data\DB\DB
 * @version {%VERSION%}
 *
 * !       YOU ARE FREE TO MODIFY THIS FILE         !
 * ! IT WILL _NOT_ BE REWRITTEN AFTER SCHEMA UPDATE !
 * !    AUTOMATICALLY UNTIL YOU WILL DELETE IT      !
 *

PLEASE NOTE:

The CRUD Object may be constructed from scratch with the RAWDATA fetched from Database. Or
it may be deserialized from Cache. You are to know it because it changes the way hooks
automatically fire.

Keep it in mind: if you have math to do inside the hooks, finish it with saving results in
Object's properties. Then they will be serialized and cached. Otherwise check that you do
same math inside __wakeup() method to restore all custom properties of deserialized Object.

       [IN CASE IF YOU ASKS FOR CRUD OBJECT VIA ITS PRIMARY OR UNIQUE KEY]
                                      |
                                      |
           *----- YES -----[Object is in cache?]---- NO ------*
           |                                                  |
           V                                                  V
*----------------------------------*      *------------------------------------------*
|Object is being fetched from Cache|      |The DBDriver makes request to the database|
*----------------------------------*      |and gets the RAWDATA ($raw).              |
           |                              *------------------------------------------*
           |                                                  |
           V                                                  V
   [Object]->__wakeup()                        {%CLASSNAME%}::createFromRaw($raw)
           |                                                  |
           |                                                  V
           |                                   {%CLASSNAME%}::create()
           |                                                  |
           |                                                  V
           |                                   {%CLASSNAME%}::hook_constructor_before($classname)
           |                                                  |
           |                                                  V
           |                                   new {%CLASSNAME%}()
           |                                                  |
           |                                                  V
           |                                   [Object]->hook_constructor_after()
           |                                                  |
           |                                                  | New instance of the {%CLASSNAME%} is created
           |                                                  | and its properties are filled with the RAWDATA.
           |                                                  | From now on we have the [Object]
           |                                                  V
           |                                   [Object]->hook_createFromRaw_after()
           |                                                  |
           |                                                  V
           |                                   [Object]->cache()
           |                                                  |
           |                                                  V
           |                                   [Object]->__sleep()
           |                                                  |
           |                                                  V
           |                                   [The serialized Object is cached]
           |                                   [ in Redis with its PK as index ]
           |                                                  |
           *----------------------*---------------------------*
                                  |
                                  |
                                  |
                                  V
                   [Now you can use your Object]


 */
class {%CLASSNAME%} extends \{%NAMESPACE%}\abstracts\{%CLASSNAME%}{

  /**
   * @return {%CLASSNAME%}
   */
  public static function create(){
    return parent::create();
  }

  public static function mutation(){
    // this method will be called ONCE! in this class life
    // before any of static methods will be triggered
    // including 'hook_constructor_before'

    // it is strongly recommended to place 'registerProperty' calls here
  }

  public static function hook_constructor_before(&$className){
    // if you need to do anything
    // before object will be constructed
    // do it here.

    // ATTENTION: this is a static function which is triggered before $className object creation;
  }

  public function hook_constructor_after(){
    // if you need to do anything with the object
    // right after its constructor has finished its routine
    // do it here.
  }

  public function hook_createFromRaw_before(&$raw){
    // if you need to do anything with raw data
    // received either from database or from cache
    // before it will be used to generate object state
    // do it here.
  }

  public function hook_createFromRaw_after(){
    // if you need to do anything with object
    // after its state was set from raw data
    // do it here.
  }

  public function hook_asArray_before(){
    // if you need to do anything before asArray method
    // do it here.

  }

  public function hook_asArray_after(&$answer){
    // if you need to do anything with answer
    // that has been created in asArray method
    // do it here.

    // use registerProperty method from CRUD class
    // to add new fields. They will be automatically
    // used in asArray method.
  }

}